
services:
  mongodb:
    image: mongo:latest
    container_name: mongo-container
    hostname: mongodb
    environment:
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - test_network
  
  mongodb-setup:
    image: python:3.10-slim
    container_name: mongo-setup
    build:
      context: .
      dockerfile: src/shared/config/mongodb/Dockerfile
    depends_on:
      - mongodb
    env_file:
      - .env
    links:
      - mongodb
    networks:
      - test_network
      
  order-service:
    build:
      context: ./src
      dockerfile: order_service/Dockerfile
    container_name: order-service
    environment:
      - FLASK_APP=order_service.wsgi:app
      - FLASK_ENV=${FLASK_ENV}
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${DATABASE_NAME}?authSource=admin
      - DATABASE_NAME=${DATABASE_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_ORDER_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_ORDER_PASSWORD}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    ports:
      - "5001:5000"
    depends_on:
       rabbitmq:
           condition: service_healthy
    networks:
      - test_network

  user-service-v1:
    build:
      context: ./src
      dockerfile: user_service_v1/Dockerfile
    container_name: user-service-v1
    environment:
      - FLASK_APP=user_service_v1.wsgi:app
      - FLASK_ENV=${FLASK_ENV}
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${DATABASE_NAME}?authSource=admin
      - DATABASE_NAME=${DATABASE_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_USER_PASSWORD}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    ports:
      - "5002:5000"
    depends_on:
       rabbitmq:
           condition: service_healthy
    networks:
      - test_network
  
  user-service-v2:
    build:
      context: ./src
      dockerfile: user_service_v2/Dockerfile
    container_name: user-service-v2
    environment:
      - FLASK_APP=user_service_v2.wsgi:app
      - FLASK_ENV=${FLASK_ENV}
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${DATABASE_NAME}?authSource=admin
      - DATABASE_NAME=${DATABASE_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_USER_PASSWORD}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
    ports:
      - "5003:5000"
    depends_on:
       rabbitmq:
           condition: service_healthy
    networks:
      - test_network
  
  rabbitmq:
     image: rabbitmq:3-management
     container_name: rabbitmq-container
     hostname: rabbitmq
     ports:
       - "5673:5673" # RabbitMQ messaging port
       - "15672:15672" # RabbitMQ management UI
     expose:
       - 5673
       - 15672
     environment:
       RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
       RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
       RABBITMQ_NODE_PORT: 5673 # had to change the default port because of a conflict with the mongodb port 
     healthcheck:
       test: rabbitmq-diagnostics check_port_connectivity
       interval: 10s
       timeout: 30s
       retries: 3
     networks:
       - test_network

  kong:
    image: kong:latest
    container_name: api-gateway
    build:
      context: ./src/api_gateway
      dockerfile: Dockerfile
      args: 
        - P_VAL=${P_VALUE}
    env_file: 
      - .env
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - P_VALUE=${P_VALUE}
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    depends_on: 
      - order-service
      - user-service-v1
      - user-service-v2
    networks:
      - test_network

  konga: 
    container_name: api-gateway-ui
    image: pantsel/konga:latest
    environment:
      - NODE_ENV=production
    ports:
      - "1337:1337"
    networks:
      - test_network

networks:
  test_network: